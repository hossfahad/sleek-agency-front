@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Inter:wght@300;400;600&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    --primary: 154 15% 49%;
    --primary-foreground: 133 100% 98%;

    --secondary: 147 21% 70%;
    --secondary-foreground: 154 15% 49%;

    --muted: 167 29% 85%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --accent: 180 31% 94%;
    --accent-foreground: 154 15% 49%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 167 29% 85%;
    --input: 167 29% 85%;
    --ring: 154 15% 49%;

    --radius: 0.5rem;

    --sidebar-background: 133 100% 98%;
    --sidebar-foreground: 154 15% 40%;
    --sidebar-primary: 154 15% 49%;
    --sidebar-primary-foreground: 133 100% 98%;
    --sidebar-accent: 167 29% 85%;
    --sidebar-accent-foreground: 154 15% 49%;
    --sidebar-border: 147 21% 70%;
    --sidebar-ring: 154 15% 49%;

    /* New color scheme */
    --viridian: #6b9080ff;
    --cambridge-blue: #a4c3b2ff;
    --mint-green: #cce3deff;
    --azure-web: #eaf4f4ff;
    --mint-cream: #f6fff8ff;

    /* Animation colors */
    --color1: #FFF;
    --color2: #000;
    --duration: 4.4s;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 154 15% 49%;
    --primary-foreground: 133 100% 98%;

    --secondary: 147 21% 70%;
    --secondary-foreground: 154 15% 49%;

    --muted: 147 21% 70%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 167 29% 85%;
    --accent-foreground: 154 15% 49%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 147 21% 70%;
    --input: 147 21% 70%;
    --ring: 154 15% 49%;
    
    --sidebar-background: 154 15% 49%;
    --sidebar-foreground: 133 100% 98%;
    --sidebar-primary: 147 21% 70%;
    --sidebar-primary-foreground: 133 100% 98%;
    --sidebar-accent: 154 15% 40%;
    --sidebar-accent-foreground: 133 100% 98%;
    --sidebar-border: 154 15% 40%;
    --sidebar-ring: 147 21% 70%;
  }

  * {
    @apply border-border;
  }

  html {
    scroll-behavior: smooth;
  }

  body {
    @apply bg-background text-foreground font-sans;
    font-feature-settings: "ss01", "ss02";
  }

  /* Ensure sections have proper spacing on mobile devices */
  section {
    scroll-margin-top: 100px;
    position: relative;
    overflow: visible;
  }

  /* Add spacing between sections */
  section + section {
    margin-top: 1rem;
  }
}

#root {
  max-width: 100%;
  margin: 0;
  padding: 0;
  text-align: left;
}

a:focus-visible, button:focus-visible {
  @apply outline-none ring-2 ring-cambridge-blue ring-offset-2;
}

/* Mobile and tablet specific styles */
@media (max-width: 768px) {
  .sticky {
    position: relative !important;
    top: 0 !important;
  }
}

@property --vh { syntax: '<length>'; initial-value: 100vh; inherits: false; }
@property --vw { syntax: '<length>'; initial-value: 100vw; inherits: false; }

@property --a { syntax: '<angle>'; initial-value: 0deg; inherits: false; }
@property --d { syntax: '<length>'; initial-value: 0px; inherits: false; }
@property --e1 { syntax: '<number>'; initial-value: 0; inherits: false; }
@property --e2 { syntax: '<number>'; initial-value: 0; inherits: false; }
@property --e3 { syntax: '<number>'; initial-value: 0; inherits: false; }
@property --e4 { syntax: '<number>'; initial-value: 0; inherits: false; }

@keyframes a {
	from { --a: 0deg; --d: 0px; --e1: 0; --e2: 0; }
	4% { --a: 0deg; }
	7% { --d: calc(var(--S) / 15); }
	13% { --d: calc(var(--S) / 15); }
	16% { --a: 90deg; }
	21% { --a: 90deg; }
	24% { --d: calc(var(--S) / 4); }
	33% { --e1: 0; }
	36% { --a: 225deg; --d: calc(var(--S) / 4); }
	42% { --e2: 0; }
	48% { --e3: 0; }
	50% { --e1: 1; }
	55% { --e4: 0; }
	57% { --e2: 1; }
	63% { --e3: 1; }
	70% { --e4: 1; }
	76% { --d: calc(var(--S) / 4); --e1: 1; --e2: 1; --e3: 1; --e4: 1; }
	88% { --d: 0; --e1: .5; --e2: .5; --e3: 0; --e4: 0; }
	to  { --a: 225deg; --d: 0; --e1: 0; --e2: 0; --e3: 0; --e4: 0; }
}

@keyframes animatePattern {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.animated-card {
  background: linear-gradient(145deg, #6B9080 0%, #A4C3B2 50%, #CCE3DE 100%);
  border-radius: 30px;
  box-shadow: 0 25px 50px -12px rgba(107, 144, 128, 0.25);
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

.white-animated-card {
  background: #FFFFFF;
  border-radius: 30px;
  box-shadow: 0 10px 30px -8px rgba(107, 144, 128, 0.2);
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
  border: 1px solid #CCE3DE;
}

.animated-card::before,
.white-animated-card::before {
  content: "";
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: repeating-linear-gradient(
    45deg,
    transparent,
    transparent 10px,
    rgba(255, 255, 255, 0.1) 10px,
    rgba(255, 255, 255, 0.1) 20px
  );
  animation: animatePattern 20s linear infinite;
}

.card-content {
  position: relative;
  z-index: 10;
  height: 100%;
}

.text-viridian {
  color: var(--viridian);
}

.text-cambridge-blue {
  color: var(--cambridge-blue);
}

.bg-viridian {
  background-color: var(--viridian);
}

.bg-cambridge-blue {
  background-color: var(--cambridge-blue);
}

.bg-mint-green {
  background-color: var(--mint-green);
}

.bg-azure-web {
  background-color: var(--azure-web);
}

.bg-mint-cream {
  background-color: var(--mint-cream);
}

.animation-container {
	--w: 400px; --h: 300px;
	--scale: min(1, tan(atan2(.9 * var(--vh), var(--h))), tan(atan2(.9 * var(--vw), var(--w))));
	--ws: round(down, var(--w) * var(--scale), 1px);
	--hs: round(down, var(--h) * var(--scale), 1px);
	position: relative;
	width: 80%;
	height: 100%;
	border-radius: 0.5rem;
	
	/* size of repeating pattern */
	--S: calc(min(var(--hs), var(--ws)) / 6);
	/* size of dot */
	--s: calc(var(--S) / 80);
	
	background:
		radial-gradient(circle at calc(50% + var(--d) * cos(var(--a) + 45deg)) calc(50% + var(--d) * sin(var(--a) + 45deg)), var(--color2) var(--s), transparent calc(var(--s) + 1px)),
		radial-gradient(circle at calc(50% + var(--d) * cos(var(--a) + 135deg)) calc(50% + var(--d) * sin(var(--a) + 135deg)), var(--color2) var(--s), transparent calc(var(--s) + 1px)),
		radial-gradient(circle at calc(50% + var(--d) * cos(var(--a) + 225deg)) calc(50% + var(--d) * sin(var(--a) + 225deg)), var(--color2) var(--s), transparent calc(var(--s) + 1px)),
		radial-gradient(circle at calc(50% + var(--d) * cos(var(--a) + 315deg)) calc(50% + var(--d) * sin(var(--a) + 315deg)), var(--color2) var(--s), transparent calc(var(--s) + 1px)),
		radial-gradient(
			circle at
				calc(50% + var(--d) * cos(var(--a) + 315deg) + var(--e1) * var(--S) / 2)
				calc(50% + var(--d) * sin(var(--a) + 315deg) - var(--e1) * var(--S) / 2),
			var(--color2) var(--s),
			transparent calc(var(--s) + 1px)
		),
		radial-gradient(
			circle at
				calc(50% + var(--d) * cos(var(--a) + 315deg) + var(--e1) * var(--S) / 2)
				calc(50% + var(--d) * sin(var(--a) + 315deg) - var(--e1) * var(--S) / 2 + var(--S)),
			var(--color2) var(--s),
			transparent calc(var(--s) + 1px)
		),
		radial-gradient(
			circle at
				calc(50% + var(--d) * cos(var(--a) + 135deg) - var(--e1) * var(--S) / 2)
				calc(50% + var(--d) * sin(var(--a) + 135deg) + var(--e1) * var(--S) / 2),
			var(--color2) var(--s),
			transparent calc(var(--s) + 1px)
		),
		radial-gradient(
			circle at
				calc(50% + var(--d) * cos(var(--a) + 135deg) - var(--e1) * var(--S) / 2)
				calc(50% + var(--d) * sin(var(--a) + 135deg) + var(--e1) * var(--S) / 2 - var(--S)),
			var(--color2) var(--s),
			transparent calc(var(--s) + 1px)
		),
		radial-gradient(
			circle at
				calc(50% + var(--d) * cos(var(--a) + 45deg) - var(--e2) * var(--S) / 2)
				calc(50% + var(--d) * sin(var(--a) + 45deg) + var(--e2) * var(--S) / 2),
			var(--color2) var(--s),
			transparent calc(var(--s) + 1px)
		),
		radial-gradient(
			circle at
				calc(50% + var(--d) * cos(var(--a) + 45deg) - var(--e2) * var(--S) / 2 + var(--S))
				calc(50% + var(--d) * sin(var(--a) + 45deg) + var(--e2) * var(--S) / 2),
			var(--color2) var(--s),
			transparent calc(var(--s) + 1px)
		),
		radial-gradient(
			circle at
				calc(50% + var(--d) * cos(var(--a) + 225deg) + var(--e2) * var(--S) / 2)
				calc(50% + var(--d) * sin(var(--a) + 225deg) - var(--e2) * var(--S) / 2),
			var(--color2) var(--s),
			transparent calc(var(--s) + 1px)
		),
		radial-gradient(
			circle at
				calc(50% + var(--d) * cos(var(--a) + 225deg) + var(--e2) * var(--S) / 2 - var(--S))
				calc(50% + var(--d) * sin(var(--a) + 225deg) - var(--e2) * var(--S) / 2),
			var(--color2) var(--s),
			transparent calc(var(--s) + 1px)
		),
		radial-gradient(
			circle at
				calc(50% + var(--d) * cos(var(--a) + 315deg) + var(--e3) * var(--S) / 2)
				calc(50% + var(--d) * sin(var(--a) + 315deg) + var(--e3) * var(--S) / 2),
			var(--color2) var(--s),
			transparent calc(var(--s) + 1px)
		),
		radial-gradient(
			circle at
				calc(50% + var(--d) * cos(var(--a) + 225deg) - var(--e3) * var(--S) / 2)
				calc(50% + var(--d) * sin(var(--a) + 225deg) - var(--e3) * var(--S) / 2),
			var(--color2) var(--s),
			transparent calc(var(--s) + 1px)
		),
		radial-gradient(
			circle at
				calc(50% + var(--d) * cos(var(--a) + 45deg) + var(--e4) * var(--S) / 2)
				calc(50% + var(--d) * sin(var(--a) + 45deg) + var(--e4) * var(--S) / 2),
			var(--color2) var(--s),
			transparent calc(var(--s) + 1px)
		),
		radial-gradient(
			circle at
				calc(50% + var(--d) * cos(var(--a) + 135deg) - var(--e4) * var(--S) / 2)
				calc(50% + var(--d) * sin(var(--a) + 135deg) - var(--e4) * var(--S) / 2),
			var(--color2) var(--s),
			transparent calc(var(--s) + 1px)
		);
	background-position: center;
	background-size: var(--S) var(--S);
	background-color: var(--color1);
	box-sizing: border-box;
	animation: a var(--duration) ease-in-out infinite both;
}

/* Remove these duplicate styles as they're now defined with desktop-services-view prefix */
.horizontal-scroll-container {
  display: none;
}

.horizontal-scroll-content {
  display: none;
}

.service-card {
  display: none;
}

.scroll-button {
  display: none;
}

/* Keep the scrolling behavior styles but hide them by default */
.horizontal-scroll-container.scrolling {
  cursor: grabbing;
}

.horizontal-scroll-container.scrolling::before,
.horizontal-scroll-container.scrolling::after {
  opacity: 0;
}

.horizontal-scroll-container:active {
  cursor: grabbing;
}

.horizontal-scroll-container::-webkit-scrollbar {
  display: none;
}

/* Scroll indicators that will only show on desktop */
.horizontal-scroll-container::before,
.horizontal-scroll-container::after {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  width: 60px;
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: 5;
}

.horizontal-scroll-container::before {
  left: 0;
  background: linear-gradient(to right, rgba(255,255,255,0.8) 0%, rgba(255,255,255,0) 100%);
}

.horizontal-scroll-container::after {
  right: 0;
  background: linear-gradient(to left, rgba(255,255,255,0.8) 0%, rgba(255,255,255,0) 100%);
}

/* Desktop Services View */
.desktop-services-view {
  opacity: 1;
}

.desktop-services-view .horizontal-scroll-container {
  overflow-x: auto;
  white-space: nowrap;
  -ms-overflow-style: none;
  scrollbar-width: none;
  padding: 20px 60px;
  margin: 0 -60px;
  position: relative;
  transition: all 0.3s ease;
  visibility: visible;
  opacity: 1;
}

.desktop-services-view .horizontal-scroll-container::-webkit-scrollbar {
  display: none;
}

.desktop-services-view .horizontal-scroll-container.scrolling {
  cursor: grabbing;
}

.desktop-services-view .horizontal-scroll-content {
  display: inline-flex;
  transition: transform 0.3s ease;
  padding-bottom: 20px;
}

.desktop-services-view .service-card {
  flex: 0 0 auto;
  width: 300px;
  padding: 20px;
  margin-right: 20px;
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  white-space: normal;
  opacity: 1;
  transform: translateY(0);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.desktop-services-view .service-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
}

.desktop-services-view .scroll-button {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 40px;
  height: 40px;
  background-color: #fff;
  border: none;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  z-index: 10;
  opacity: 0;
  transition: opacity 0.3s ease, transform 0.3s ease;
}

.desktop-services-view:hover .scroll-button {
  opacity: 0.9;
}

.desktop-services-view .scroll-button:hover {
  opacity: 1;
  transform: translateY(-50%) scale(1.1);
}

.desktop-services-view .scroll-button-left {
  left: 15px;
}

.desktop-services-view .scroll-button-right {
  right: 15px;
}

/* Mobile Services View */
.mobile-services-view .vertical-scroll-container {
  display: flex;
  flex-direction: column;
  padding: 0 20px;
}

.mobile-services-view .service-card-mobile {
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
  padding: 16px;
  opacity: 0;
  transform: translateY(20px);
  animation: fadeInUp 0.5s forwards;
}

/* Tablet Services View */
.tablet-services-view .grid-scroll-container {
  padding: 0 20px;
}

.tablet-services-view .service-card-tablet {
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
  padding: 16px;
  height: 100%;
  opacity: 0;
  transform: translateY(20px);
  animation: fadeInUp 0.5s forwards;
}

@keyframes fadeInUp {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Make sure service cards remain visible on mobile and tablet */
.mobile-services-view .service-card-mobile,
.tablet-services-view .service-card-tablet {
  animation-fill-mode: both;
  animation-delay: var(--delay, 0ms);
}

/* Media query to ensure desktop components are visible at large screens */
@media (min-width: 1024px) {
  .desktop-services-view .horizontal-scroll-container,
  .desktop-services-view .scroll-button {
    display: block;
  }
  
  .desktop-services-view .horizontal-scroll-content {
    display: inline-flex;
  }
  
  .desktop-services-view .service-card {
    display: block;
  }
}

/* For older browsers that don't support animation-delay with CSS variables */
.service-card-mobile:nth-child(1),
.service-card-tablet:nth-child(1) {
  animation-delay: 100ms;
}
.service-card-mobile:nth-child(2),
.service-card-tablet:nth-child(2) {
  animation-delay: 200ms;
}
.service-card-mobile:nth-child(3),
.service-card-tablet:nth-child(3) {
  animation-delay: 300ms;
}
.service-card-mobile:nth-child(4),
.service-card-tablet:nth-child(4) {
  animation-delay: 400ms;
}
.service-card-mobile:nth-child(5),
.service-card-tablet:nth-child(5) {
  animation-delay: 500ms;
}

/* Glassmorphism Styles */
.glass-card {
  --blur: 12px;
  --green-primary: var(--viridian);
  --green-secondary: var(--cambridge-blue);
  --dark-bg: rgba(255, 255, 255, 0.05);
  --light-bg: rgba(255, 255, 255, 0.2);
  
  backdrop-filter: blur(var(--blur));
  -webkit-backdrop-filter: blur(var(--blur));
  background-image: linear-gradient(90deg, var(--light-bg), var(--dark-bg));
  border-radius: 1rem;
  box-shadow: 0 8px 32px 0 rgba(107, 144, 128, 0.15);
  border: 1px solid rgba(255, 255, 255, 0.18);
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

.glass-card::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: inherit;
  border: 1px solid rgba(255, 255, 255, 0.5);
  mask-image: linear-gradient(135deg, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0) 50%);
  -webkit-mask-image: linear-gradient(135deg, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0) 50%);
  pointer-events: none;
}

.glass-card::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: inherit;
  border: 1px solid var(--green-primary);
  mask-image: linear-gradient(135deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 1));
  -webkit-mask-image: linear-gradient(135deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 1));
  pointer-events: none;
}

.glass-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 30px 0 rgba(107, 144, 128, 0.2);
}

.glass-button {
  backdrop-filter: blur(var(--blur));
  -webkit-backdrop-filter: blur(var(--blur));
  background: linear-gradient(90deg, var(--green-primary), var(--green-secondary));
  color: white;
  border: none;
  border-radius: 0.5rem;
  padding: 0.75rem 1.5rem;
  font-weight: 500;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  box-shadow: 0 4px 15px rgba(107, 144, 128, 0.2);
}

.glass-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(107, 144, 128, 0.3);
}

.glass-button::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
  pointer-events: none;
}

